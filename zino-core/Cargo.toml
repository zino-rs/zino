[package]
name = "zino-core"
description = "Core types and traits for zino."
version = "0.11.1"
rust-version = "1.72"
edition = "2021"
license = "MIT"
categories = ["asynchronous", "network-programming", "web-programming::http-server"]
keywords = ["http", "web", "framework"]
homepage = "https://github.com/photino/zino"
repository = "https://github.com/photino/zino"
documentation = "https://docs.rs/zino-core"
readme = "README.md"

[package.metadata.docs.rs]
features = ["full", "runtime-tokio"]

[features]
accessor = ["opendal"]
accessor-dashmap = ["accessor", "opendal/services-dashmap"]
accessor-ftp = ["accessor", "opendal/services-ftp"]
accessor-ipfs = ["accessor", "opendal/services-ipfs"]
accessor-memcached = ["accessor", "opendal/services-memcached"]
accessor-moka = ["accessor", "opendal/services-moka"]
accessor-redis = ["accessor", "opendal/services-redis"]
accessor-sled = ["accessor", "opendal/services-sled"]
all-accessors = [
    "accessor",
    "accessor-dashmap",
    "accessor-ftp",
    "accessor-ipfs",
    "accessor-memcached",
    "accessor-moka",
    "accessor-redis",
    "accessor-sled",
]
all-connectors = [
    "connector",
    "connector-arrow",
    "connector-http",
    "connector-mysql",
    "connector-postgres",
    "connector-sqlite",
]
cache = ["dep:lru"]
chatbot = []
chatbot-openai = ["dep:async-openai", "chatbot"]
all-chatbots = ["chatbot", "chatbot-openai"]
connector = ["connector-http"]
connector-arrow = ["dep:datafusion", "connector"]
connector-http = ["connector"]
connector-mysql = ["connector", "sqlx", "sqlx/mysql"]
connector-postgres = ["connector", "sqlx", "sqlx/postgres"]
connector-sqlite = ["connector", "sqlx", "sqlx/sqlite"]
default = ["runtime-tokio"]
full = [
    "all-accessors",
    "all-chatbots",
    "all-connectors",
    "cache",
    "orm",
    "view",
]
orm = ["sqlx", "sqlx/postgres"]
orm-mysql = ["orm", "sqlx/mysql"]
orm-postgres = ["orm", "sqlx/postgres"]
runtime-async-std = ["sqlx?/runtime-async-std"]
runtime-tokio = ["sqlx?/runtime-tokio"]
tls-native = ["opendal?/native-tls", "reqwest/native-tls", "sqlx?/tls-native-tls"]
tls-rustls = ["opendal?/rustls", "reqwest/rustls-tls", "sqlx?/tls-rustls"]
view = ["dep:minijinja"]
view-tera = ["view", "dep:tera"]
view-minijinja = ["view", "dep:minijinja"]

[dependencies]
aes-gcm-siv = "0.11.1"
apache-avro = "0.15.0"
async-trait = "0.1.71"
base64 = "0.21.2"
bytes = "1.4.0"
cfg-if = "1.0"
convert_case = "0.6.0"
cookie = "0.16.2"
cron = "0.12.0"
csv = "1.2.2"
fluent = "0.16.0"
futures = "0.3.28"
hkdf = "0.12.3"
hmac = "0.12.1"
http = "0.2.9"
http-body = "0.4.5"
intl-memoizer = "0.5.1"
jwt-simple = "0.11.5"
metrics = "0.21.0"
metrics-exporter-prometheus = "0.12.1"
multer = "2.1.0"
parking_lot = "0.12.1"
rand = "0.8.5"
regex = "1.9.0"
reqwest-middleware = "0.2.2"
reqwest-retry = "0.2.2"
reqwest-tracing = "0.4.5"
rmp-serde = "1.1.1"
serde_qs = "0.12.0"
serde_urlencoded = "0.7.1"
sha2 = "0.10.7"
sysinfo = "0.29.3"
task-local-extensions = "0.1.4"
toml = "0.7.6"
tracing = "0.1.37"
tracing-appender = "0.2.2"
url = "2.4.0"

[dependencies.argon2]
version = "0.5.0"
features = ["std"]

[dependencies.async-openai]
version = "0.12.1"
optional = true

[dependencies.chrono]
version = "0.4.26"
features = ["serde"]

[dependencies.datafusion]
version = "27.0.0"
optional = true

[dependencies.lru]
version = "0.10.1"
optional = true

[dependencies.minijinja]
version = "1.0.3"
optional = true
features = ["debug", "loader"]

[dependencies.opendal]
version = "0.38.0"
optional = true
features = ["layers-all"]

[dependencies.reqwest]
version = "0.11.18"
features = [
    "cookies",
    "gzip",
    "json",
    "multipart",
    "stream",
]

[dependencies.serde]
version = "1.0.167"
features = ["derive"]

[dependencies.serde_json]
version = "1.0.100"
features = ["raw_value"]

[dependencies.sqlx]
version = "0.7.0"
optional = true
features = [
    "bigdecimal",
    "chrono",
    "rust_decimal",
    "uuid",
]

[dependencies.tera]
version = "1.19.0"
optional = true

[dependencies.tracing-subscriber]
version = "0.3.17"
features = [
    "env-filter",
    "json",
    "local-time",
    "parking_lot",
]

[dependencies.unic-langid]
version = "0.9.1"
features = ["macros"]

[dependencies.utoipa]
version = "3.3.0"
features = ["non_strict_integers", "uuid"]

[dependencies.uuid]
version = "1.4.0"
features = [
    "fast-rng",
    "serde",
    "v4",
    "v7",
]

[dev-dependencies]
anyhow = "1.0.71"
criterion = "0.5.1"
tinyvec = { version = "1.6.0", features = ["alloc"] }

[[bench]]
name = "criterion_main"
harness = false
